<?php namespace App\Http\Controllers\Api;


use App\Http\Controllers\Controller;
use App\Http\Requests\LoginRequest;
use App\Models\Customer;
use App\Models\Supplier;
use App\User;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Validator;

class LoginController extends Controller
{
    public function login(Request $request)
    {

        $data = [
            'phone' => $request->phone,
            'password' => $request->password
        ];

        if (auth()->attempt($data)) {
            $token = auth()->user()->createToken('LaravelAuthApp')->accessToken;
            return response()->json(['user' => \auth()->user(), 'success' => true, 'api_token' => $token], 200);
        } else {
            return response()->json(['success' => false, 'error' => 'Giriş Yapılamadı'], 200);
        }
    }


    public function reservations()
    {
        return parent::staticData(); // TODO: Change the autogenerated stub
    }


    public function customerLogin(LoginRequest $request)
    {

        $credentials = array(
            'email' => $request->email,
            'password' => $request->password
        );

        $remember_me = $request->has('remember') ? true : false;
        if (Auth::guard('web')->attempt($credentials, $remember_me)) {
            $finduser = Customer::find(Auth::guard('web')->id());
            Auth::guard('web')->login($finduser, $remember_me);
            $token = auth()->user()->createToken('LaravelAuthApp')->accessToken;
            return response()->json(['success' => true,'token' => $token], 200);
        }
        return response()->json(['success' => false, 'message' => "Hatalı Kullanıcı Adı ve Şifre"], 200);
    }

    public function register(LoginRequest $request)
    {
        $customer           = new Customer();
        $customer->email    = $request->email;
        $customer->password = $request->password;
        $customer->save();
        $token = auth()->user()->createToken('LaravelAuthApp')->accessToken;
        return response()->json(['success' => true,'token' => $token,'data' => $customer], 200);
    }


}
